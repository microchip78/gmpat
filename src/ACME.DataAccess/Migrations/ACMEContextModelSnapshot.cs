// <auto-generated />
using System;
using ACME.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ACME.DataAccess.Migrations
{
    [DbContext(typeof(ACMEContext))]
    partial class ACMEContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ACME.Core.Models.Application", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CountryId");

                    b.Property<DateTime?>("DateTimeCreated")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(120);

                    b.Property<int?>("PostcodeId")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("Application");
                });

            modelBuilder.Entity("ACME.Core.Models.Country", b =>
                {
                    b.Property<int>("CountryId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CountryCode")
                        .IsRequired();

                    b.Property<string>("CountryName")
                        .IsRequired();

                    b.HasKey("CountryId");

                    b.ToTable("Country");

                    b.HasData(
                        new
                        {
                            CountryId = 1,
                            CountryCode = "AU",
                            CountryName = "Australia"
                        },
                        new
                        {
                            CountryId = 2,
                            CountryCode = "NZ",
                            CountryName = "New Zealand"
                        },
                        new
                        {
                            CountryId = 3,
                            CountryCode = "AQ",
                            CountryName = "Antarctica"
                        },
                        new
                        {
                            CountryId = 4,
                            CountryCode = "AR",
                            CountryName = "Argentina"
                        },
                        new
                        {
                            CountryId = 5,
                            CountryCode = "BR",
                            CountryName = "Brazil"
                        },
                        new
                        {
                            CountryId = 6,
                            CountryCode = "AU",
                            CountryName = "Australia"
                        },
                        new
                        {
                            CountryId = 7,
                            CountryCode = "NZ",
                            CountryName = "New Zeland"
                        },
                        new
                        {
                            CountryId = 8,
                            CountryCode = "AQ",
                            CountryName = "Antarticia"
                        },
                        new
                        {
                            CountryId = 9,
                            CountryCode = "AR",
                            CountryName = "Argentina"
                        },
                        new
                        {
                            CountryId = 10,
                            CountryCode = "BR",
                            CountryName = "Brazil"
                        });
                });

            modelBuilder.Entity("ACME.Core.Models.Postcode", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BSPname")
                        .HasMaxLength(50);

                    b.Property<string>("BSPnumber")
                        .HasMaxLength(50);

                    b.Property<string>("Category")
                        .HasMaxLength(50);

                    b.Property<string>("Comments")
                        .HasMaxLength(50);

                    b.Property<string>("DeliveryOffice")
                        .HasMaxLength(50);

                    b.Property<string>("Locality")
                        .HasMaxLength(50);

                    b.Property<string>("ParcelZone")
                        .HasMaxLength(50);

                    b.Property<string>("Pcode")
                        .HasMaxLength(50);

                    b.Property<string>("PreSortIndicator")
                        .HasMaxLength(50);

                    b.Property<string>("State")
                        .HasMaxLength(50);

                    b.HasKey("ID");

                    b.ToTable("Postcodes");

                    b.HasData(
                        new
                        {
                            ID = 50,
                            Category = "Delivery Area",
                            Locality = "ACACIA HILLS",
                            Pcode = "822",
                            State = "NT"
                        },
                        new
                        {
                            ID = 3802,
                            Category = "Delivery Area",
                            Locality = "ACTON",
                            Pcode = "2601",
                            State = "ACT"
                        },
                        new
                        {
                            ID = 5172,
                            Category = "Delivery Area",
                            Locality = "AARONS PASS",
                            Pcode = "2850",
                            State = "NSW"
                        },
                        new
                        {
                            ID = 7795,
                            Category = "Delivery Area",
                            Locality = "ABBEYARD",
                            Pcode = "3737",
                            State = "VIC"
                        },
                        new
                        {
                            ID = 10354,
                            Category = "Delivery Area",
                            Locality = "ABBEYWOOD",
                            Pcode = "4613",
                            State = "QLD"
                        },
                        new
                        {
                            ID = 12392,
                            Category = "Delivery Area",
                            Locality = "ABERFOYLE PARK",
                            Pcode = "5159",
                            State = "SA"
                        },
                        new
                        {
                            ID = 14504,
                            Category = "Delivery Area",
                            Locality = "ABBA RIVER",
                            Pcode = "6280",
                            State = "WA"
                        },
                        new
                        {
                            ID = 16305,
                            Category = "Delivery Area",
                            Locality = "ACACIA HILLS",
                            Pcode = "7306",
                            State = "TAS"
                        },
                        new
                        {
                            ID = 16361,
                            Category = "Delivery Area",
                            Locality = "ABBOTSHAM",
                            Pcode = "7315",
                            State = "TAS"
                        },
                        new
                        {
                            ID = 16389,
                            Category = "Delivery Area",
                            Comments = "BURNIE",
                            Locality = "ACTON",
                            Pcode = "7320",
                            State = "TAS"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
